{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#benvinguts","title":"Benvinguts!!","text":"<p>Benivinguts a la web de Desenvolupament d'Interf\u00edcies.</p> <p>Curs 25/26. IES Jaume II \"El Just\" - Tavernes de la Valldigna</p>"},{"location":"about/","title":"About","text":""},{"location":"about/#desenvolupament-dinterfecies","title":"Desenvolupament d'interf\u00e9cies","text":""},{"location":"about/#normativa","title":"Normativa","text":"<p>Estatal -&gt; RD: 450/2010</p> <p>Auton\u00f2mica -&gt; Curr\u00edculum CV: Ordre 58/2012</p>"},{"location":"about/#ies-jaume-ii-el-just-tavernes-de-la-valldigna","title":"IES Jaume II \"El Just\" - Tavernes de la Valldigna","text":""},{"location":"about/#curs-2024-2025","title":"Curs 2024-2025","text":"<p>Professor: Ferran Cunyat</p>"},{"location":"enlla%C3%A7os/","title":"Enlla\u00e7os","text":""},{"location":"enlla%C3%A7os/#benvinguts","title":"Benvinguts!!","text":""},{"location":"enlla%C3%A7os/#unitat-0-repas-de-javascript","title":"Unitat 0 - Rep\u00e0s de Javascript","text":"<p>https://javascript.info/</p> <p>https://eloquentjavascript.net/</p> <p>https://developer.mozilla.org/en-US/docs/Web/JavaScript</p>"},{"location":"Projecte%20Biblioteca/Pildores/BD/camps-calculats/","title":"Camps calculats","text":""},{"location":"Projecte%20Biblioteca/Pildores/BD/camps-calculats/#camps-o-valors-calculats","title":"Camps o valors calculats","text":"<p>En bases de dades relacionals, els valors calculats (o camps calculats) no es guarden f\u00edsicament a la taula, sin\u00f3 que es generen a trav\u00e9s de consultes cada vegada que es necessiten.</p> <p>Contextualitzant al nostre projecte de biblioteca, per calcular el nombre de llibres (o recursos) prestats a un soci, utilitzarem una consulta que compti els pr\u00e9stecs actius (aquells on la <code>data_retorn</code> sigui NULL, indicant que el recurs no ha estat retornat encara).</p>"},{"location":"Projecte%20Biblioteca/Pildores/BD/camps-calculats/#com-calcular-el-nombre-de-llibres-prestats","title":"Com calcular el nombre de llibres prestats","text":"<p>La taula <code>Prestecs</code> ja cont\u00e9 la relaci\u00f3 entre <code>Socis</code> i <code>Recursos</code> mitjan\u00e7ant les claus <code>soci_id</code> i <code>recurso_id</code>, aix\u00ed que podem obtenir el nombre de llibres prestats a un soci mitjan\u00e7ant una consulta.</p>"},{"location":"Projecte%20Biblioteca/Pildores/BD/camps-calculats/#exemple-de-consulta-per-calcular-el-nombre-de-llibres-prestats","title":"Exemple de consulta per calcular el nombre de llibres prestats:","text":"SQL<pre><code>SELECT COUNT(*) AS llibres_prestats\nFROM Prestecs\nWHERE soci_id = 1 AND data_retorn IS NULL;\n</code></pre> <ul> <li><code>COUNT(*)</code>: Aquesta funci\u00f3 comptar\u00e0 totes les files que compleixen amb la condici\u00f3.</li> <li><code>soci_id = 1</code>: Substitueix <code>1</code> per l'ID del soci per al qual vols saber el nombre de llibres prestats.</li> <li><code>data_retorn IS NULL</code>: Filtra els pr\u00e9stecs que no han estat retornats, \u00e9s a dir, aquells que encara estan actius.</li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/BD/camps-calculats/#camps-calculats-mitjancant-una-vista","title":"Camps calculats mitjan\u00e7ant una vista","text":"<p>Una altra opci\u00f3 per tenir aquests c\u00e0lculs disponibles sense haver de fer la consulta cada vegada \u00e9s crear una vista (view), que \u00e9s una consulta predefinida que es comporta com si fos una taula.</p>"},{"location":"Projecte%20Biblioteca/Pildores/BD/camps-calculats/#creacio-de-la-vista-llibresprestats-per-obtenir-el-nombre-de-llibres-prestats-a-cada-soci","title":"Creaci\u00f3 de la vista <code>LlibresPrestats</code> per obtenir el nombre de llibres prestats a cada soci:","text":"SQL<pre><code>CREATE VIEW LlibresPrestats AS\nSELECT p.soci_id, COUNT(*) AS llibres_prestats\nFROM Prestecs p\nWHERE p.data_retorn IS NULL\nGROUP BY p.soci_id;\n</code></pre> <p>Aquesta vista <code>LlibresPrestats</code> et permetr\u00e0 consultar f\u00e0cilment quants llibres t\u00e9 cada soci en pr\u00e9stec:</p> SQL<pre><code>SELECT * FROM LlibresPrestats WHERE soci_id = 1;\n</code></pre> <p>Aquesta consulta et retornar\u00e0 el nombre de llibres que el soci amb <code>id = 1</code> t\u00e9 actualment en pr\u00e9stec.</p>"},{"location":"Projecte%20Biblioteca/Pildores/BD/camps-calculats/#com-funciona-una-vista","title":"Com funciona una vista?","text":"<p>Una vista \u00e9s una consulta SQL que es guarda al sistema de bases de dades i es pot utilitzar com si fos una taula. No emmagatzema les dades, sin\u00f3 que les calcula cada vegada que es consulta. Aix\u00f2 et permet obtenir informaci\u00f3 din\u00e0mica sense duplicar dades.</p>"},{"location":"Projecte%20Biblioteca/Pildores/BD/camps-calculats/#alternativa-sense-vista-calcul-en-temps-real","title":"Alternativa sense vista: C\u00e0lcul en temps real","text":"<p>Si no vols crear una vista, sempre pots calcular el nombre de llibres prestats en temps real a trav\u00e9s d'una consulta directa cada vegada que ho necessitis. Per\u00f2 la vista \u00e9s una manera de fer-ho m\u00e9s neta i reutilitzable, sense haver de repetir la mateixa consulta en diverses parts del codi.</p>"},{"location":"Projecte%20Biblioteca/Pildores/BD/camps-calculats/#vista-llibres-prestats-per-soci","title":"Vista llibres prestats per soci","text":"<p>Per obtenir la llista de llibres prestats per soci, utilitzant la taula <code>Prestecs</code> per calcular quins llibres estan actualment en pr\u00e9stec.</p>"},{"location":"Projecte%20Biblioteca/Pildores/BD/camps-calculats/#creacio-de-la-vista-per-obtenir-la-llista-de-llibres-prestats-per-soci","title":"Creaci\u00f3 de la vista per obtenir la llista de llibres prestats per soci:","text":"SQL<pre><code>CREATE VIEW LlibresPrestatsPerSoci AS\nSELECT s.id AS soci_id, r.titol AS llibre, p.data_prestec\nFROM Prestecs p\nJOIN Recursos r ON p.recurso_id = r.id\nJOIN Socis s ON p.soci_id = s.id\nWHERE p.data_retorn IS NULL AND r.tipus = 'llibre';\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/BD/camps-calculats/#explicacio","title":"Explicaci\u00f3:","text":"<ul> <li><code>Prestecs p</code>: Taula de pr\u00e9stecs, que relaciona socis i recursos.</li> <li><code>JOIN Recursos r ON p.recurso_id = r.id</code>: Uneix la taula <code>Prestecs</code> amb la taula <code>Recursos</code> per obtenir els t\u00edtols dels recursos prestats.</li> <li><code>JOIN Socis s ON p.soci_id = s.id</code>: Uneix la taula <code>Prestecs</code> amb la taula <code>Socis</code> per obtenir els noms dels socis.</li> <li><code>WHERE p.data_retorn IS NULL</code>: Filtra els pr\u00e9stecs actius (on no s'ha retornat el recurs).</li> <li><code>r.tipus = 'llibre'</code>: Filtra nom\u00e9s els recursos que siguin de tipus <code>llibre</code>.</li> <li><code>soci_id</code>: L'ID del soci que t\u00e9 els llibres prestats.</li> <li><code>llibre</code>: El t\u00edtol del llibre prestat.</li> <li><code>data_prestec</code>: La data en qu\u00e8 es va realitzar el pr\u00e9stec.</li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/BD/camps-calculats/#consultes-amb-la-vista","title":"Consultes amb la vista","text":"<ol> <li>Llistar tots els llibres prestats per soci:</li> </ol> <p>Per obtenir tots els llibres prestats per un soci en particular (per exemple, soci amb id = 1):</p> SQL<pre><code>SELECT * FROM LlibresPrestatsPerSoci WHERE soci_id = 1;\n</code></pre> <p>Aquesta consulta et mostrar\u00e0 tots els llibres prestats al soci amb <code>id = 1</code>.</p> <ol> <li>Llistar tots els llibres prestats (per a tots els socis):</li> </ol> <p>Per obtenir tots els llibres prestats a tots els socis (una llista general):</p> SQL<pre><code>SELECT * FROM LlibresPrestatsPerSoci;\n</code></pre> <p>Aquesta consulta et mostrar\u00e0 la llista de tots els llibres que estan actualment en pr\u00e9stec, juntament amb la informaci\u00f3 del soci i la data de pr\u00e9stec.</p>"},{"location":"Projecte%20Biblioteca/Pildores/BD/camps-calculats/#avantatges-de-les-vistes","title":"Avantatges de les vistes","text":"<ul> <li>Simplicitat: Amb aquesta vista, no has de repetir la mateixa consulta cada vegada que necessites saber quins llibres estan prestats a un soci.</li> <li>Rendiment: Si la vista es consulta de manera eficient i est\u00e0 ben indexada, pots obtenir la informaci\u00f3 m\u00e9s r\u00e0pidament que si fas les unions manualment a cada consulta.</li> <li>Mantenibilitat: Si necessites modificar la l\u00f2gica per calcular els llibres prestats (per exemple, afegir m\u00e9s filtres o relacionar altres taules), pots fer-ho f\u00e0cilment modificant nom\u00e9s la vista.</li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/BD/camps-calculats/#resum","title":"Resum","text":"<ul> <li>Camps calculats no es guarden f\u00edsicament a la taula. En lloc d'aix\u00f2, els calculem a trav\u00e9s de consultes SQL quan sigui necessari.</li> <li>Pots crear una vista per tenir aquest c\u00e0lcul disponible de manera f\u00e0cil, o b\u00e9 calcular-lo directament en cada consulta.</li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/BD/herencia-especialitzacio/","title":"Her\u00e8ncia especialitzaci\u00f3","text":""},{"location":"Projecte%20Biblioteca/Pildores/BD/herencia-especialitzacio/#herencia-per-especialitzacio-en-bases-de-dades","title":"Her\u00e8ncia per especialitzaci\u00f3 en bases de dades","text":"<p>En bases de dades relacionals es poden utilitzar conceptes similars a l'her\u00e8ncia en Programaci\u00f3 Orientada a Objectes (POO) per modelar situacions on una entitat \u00e9s una especialitzaci\u00f3 d'una altra. Aix\u00f2 s'aconsegueix mitjan\u00e7ant estrat\u00e8gies d'her\u00e8ncia en bases de dades, tot i que la implementaci\u00f3 no \u00e9s tan directa com en POO.</p>"},{"location":"Projecte%20Biblioteca/Pildores/BD/herencia-especialitzacio/#opcions-per-modelar-herencia-a-bases-de-dades-relacionals","title":"Opcions per modelar her\u00e8ncia a bases de dades relacionals","text":"<p>En bases de dades relacionals, hi ha diverses maneres de gestionar les especialitzacions, i el m\u00e8tode que tri\u00efs dependr\u00e0 del teu cas d'\u00fas espec\u00edfic. Les estrat\u00e8gies m\u00e9s comunes s\u00f3n:</p> <ol> <li>Taula \u00fanica (Single Table Inheritance): Emmagatzemar tots els tipus en una \u00fanica taula i afegir una columna per identificar el tipus de cada registre.</li> <li>Taules per a cada classe (Class Table Inheritance): Crear una taula per a la classe base i taules separades per a cada subclasse (com est\u00e0s suggerint).</li> <li>Taula de relaci\u00f3 (Concrete Table Inheritance): Crear una taula separada per cada classe (base i subclasse), per\u00f2 amb duplicaci\u00f3 de dades entre les taules.</li> </ol>"},{"location":"Projecte%20Biblioteca/Pildores/BD/herencia-especialitzacio/#21-utilitzar-herencia-mitjancant-una-taula-pare","title":"2.1. Utilitzar her\u00e8ncia mitjan\u00e7ant una taula pare","text":"<p>Si <code>Socis</code> i <code>Administradors</code> s\u00f3n especialitzacions de la mateixa entitat (per exemple, una taula pare anomenada <code>Persones</code>), es pot modelar la relaci\u00f3 d'aquesta manera:</p>"},{"location":"Projecte%20Biblioteca/Pildores/BD/herencia-especialitzacio/#taula-pare-persones","title":"Taula Pare: Persones","text":"SQL<pre><code>-- Creaci\u00f3 de la taula Persones (taula pare)\nCREATE TABLE Persones (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    nom VARCHAR(255),\n    dni VARCHAR(9) UNIQUE,\n    tipus ENUM('soci', 'administrador')\n);\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/BD/herencia-especialitzacio/#taula-socis-relacionada-amb-persones","title":"Taula Socis (relacionada amb <code>Persones</code>)","text":"SQL<pre><code>-- Creaci\u00f3 de la taula Socis (subclasse)\nCREATE TABLE Socis (\n    id INT PRIMARY KEY,\n    llibres_prestats TEXT,\n    FOREIGN KEY (id) REFERENCES Persones(id)\n);\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/BD/herencia-especialitzacio/#taula-administradors-relacionada-amb-persones","title":"Taula Administradors (relacionada amb <code>Persones</code>)","text":"SQL<pre><code>-- Creaci\u00f3 de la taula Administradors (subclasse)\nCREATE TABLE Administradors (\n    id INT PRIMARY KEY,\n    carrec VARCHAR(50),\n    FOREIGN KEY (id) REFERENCES Persones(id)\n);\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/BD/herencia-especialitzacio/#explicacio","title":"Explicaci\u00f3:","text":"<ul> <li><code>Persones</code>: Cont\u00e9 els camps comuns per a totes les persones, com el <code>nom</code>, <code>dni</code> i un <code>tipus</code> per diferenciar els socis i administradors. Aquesta taula seria la taula pare.</li> <li><code>Socis</code> i <code>Administradors</code>: Tenen una clau forana (<code>id</code>) que fa refer\u00e8ncia a la taula <code>Persones</code>. Aix\u00ed, <code>Socis</code> i <code>Administradors</code> s\u00f3n subclases de <code>Persones</code>.</li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/BD/herencia-especialitzacio/#consultes","title":"Consultes:","text":"<p>Per obtenir els socis o administradors, pots utilitzar una consulta amb una uni\u00f3:</p> SQL<pre><code>-- Obtenir tots els socis\nSELECT * FROM Persones p\nJOIN Socis s ON p.id = s.id\nWHERE p.tipus = 'soci';\n</code></pre> <p>Per obtenir tots els administradors:</p> SQL<pre><code>-- Obtenir tots els administradors\nSELECT * FROM Persones p\nJOIN Administradors a ON p.id = a.id\nWHERE p.tipus = 'administrador';\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/BD/herencia-especialitzacio/#22-tipus-de-relacions-dherencia","title":"2.2. Tipus de relacions d'her\u00e8ncia","text":"<ol> <li> <p>Taula \u00fanica (Single Table Inheritance):</p> </li> <li> <p>Emmagatzemes tots els registres en una sola taula amb una columna que indica el tipus de registre (soci, administrador, etc.).</p> </li> <li>Avantatge: Simplicitat i efici\u00e8ncia en la consulta.</li> <li>Desavantatge: Els registres de cada tipus poden estar molt diferents, el que crea molta redund\u00e0ncia.</li> </ol> <p>Exemple de taula \u00fanica:</p> SQL<pre><code>CREATE TABLE Persones (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    nom VARCHAR(255),\n    dni VARCHAR(9) UNIQUE,\n    tipus ENUM('soci', 'administrador'),\n    llibres_prestats TEXT, -- nom\u00e9s rellevant per a socis\n    carrec VARCHAR(50) -- nom\u00e9s rellevant per a administradors\n);\n</code></pre> <p>Aquesta taula t\u00e9 camps espec\u00edfics per a socis i administradors, per\u00f2 pot contenir registres de tots els tipus, el que pot generar molta redund\u00e0ncia.</p> <ol> <li> <p>Taules per a cada classe (Class Table Inheritance):</p> </li> <li> <p>Crees una taula per a la classe base (en aquest cas <code>Persones</code>) i taules separades per a cada subclasse (<code>Socis</code> i <code>Administradors</code>).</p> </li> <li>Avantatge: Mant\u00e9 la normalitzaci\u00f3 i evita la redund\u00e0ncia.</li> <li>Desavantatge: Les consultes poden ser m\u00e9s complexes, ja que hauries de fer uni\u00f3 entre taules per obtenir tota la informaci\u00f3.</li> </ol>"},{"location":"Projecte%20Biblioteca/Pildores/BD/herencia-especialitzacio/#conclusio","title":"Conclusi\u00f3","text":"<p>En aquest cas, com que <code>Socis</code> i <code>Administradors</code> tenen atributs diferents, per\u00f2 comparteixen informaci\u00f3 comuna (nom i DNI), l'her\u00e8ncia mitjan\u00e7ant una taula pare \u00e9s una bona opci\u00f3. Aix\u00ed, pots gestionar totes les persones en una taula <code>Persones</code> i crear taules especialitzades per a socis i administradors.</p> <p>D'aquesta manera, aconsegueixes evitar la duplicaci\u00f3 de dades i mantens una estructura m\u00e9s flexible i escalable.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/classes_herencia/","title":"Classes i her\u00e8ncia","text":""},{"location":"Projecte%20Biblioteca/Pildores/JS/classes_herencia/#classes-i-herencia","title":"Classes i her\u00e8ncia","text":"<p>A JavaScript, les classes i l'her\u00e8ncia s\u00f3n mecanismes que permeten organitzar i estructurar el codi de manera m\u00e9s neta i reutilitzable, imitant el comportament d'altres llenguatges de programaci\u00f3 orientats a objectes (OOP). Tot i que JavaScript no \u00e9s un llenguatge estrictament orientat a objectes, la introducci\u00f3 de les classes en ECMAScript 6 (ES6) va fer que la programaci\u00f3 orientada a objectes fos m\u00e9s accessible i intu\u00eftiva.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/classes_herencia/#1-classes-en-javascript","title":"1. Classes en JavaScript","text":"<p>Una classe \u00e9s una plantilla o un model per crear objectes. \u00c9s una forma de definir els atributs (propietats) i m\u00e8todes (funcions) d'un objecte.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/classes_herencia/#definir-una-classe","title":"Definir una classe:","text":"<p>A JavaScript, es poden definir les classes utilitzant la paraula clau <code>class</code>.</p> JavaScript<pre><code>class Persona {\n  // Constructor: inicialitza els valors de l'objecte\n  constructor(nom, edat) {\n    this.nom = nom; // propietat\n    this.edat = edat; // propietat\n  }\n\n  // M\u00e8tode de la classe\n  saludar() {\n    console.log(`Hola, em dic ${this.nom} i tinc ${this.edat} anys.`);\n  }\n}\n\n// Crear una inst\u00e0ncia de la classe\nconst persona1 = new Persona('Joan', 30);\npersona1.saludar(); // Output: Hola, em dic Joan i tinc 30 anys.\n</code></pre> <ul> <li> <p><code>constructor()</code>: El m\u00e8tode especial <code>constructor</code> es crida autom\u00e0ticament quan es crea una nova inst\u00e0ncia de la classe. S'hi defineixen els atributs o propietats inicials de l'objecte.</p> </li> <li> <p>M\u00e8todes: Els m\u00e8todes es defineixen a l'interior de la classe. Aquests s\u00f3n simplement funcions que actuen sobre les propietats de l'objecte.</p> </li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/JS/classes_herencia/#2-instanciacio-dobjectes","title":"2. Instanciaci\u00f3 d'objectes","text":"<p>Per crear un objecte a partir d'una classe, es fa servir la paraula clau <code>new</code>:</p> JavaScript<pre><code>const persona2 = new Persona('Maria', 25);\npersona2.saludar(); // Output: Hola, em dic Maria i tinc 25 anys.\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/JS/classes_herencia/#3-herencia-en-javascript","title":"3. Her\u00e8ncia en JavaScript","text":"<p>L'her\u00e8ncia permet crear una nova classe (subclasse) a partir d'una classe existent (superclasse). La subclasse heretar\u00e0 totes les propietats i m\u00e8todes de la superclasse i pot afegir-hi les seves pr\u00f2pies.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/classes_herencia/#sintaxi-dherencia","title":"Sintaxi d'her\u00e8ncia:","text":"<p>A JavaScript, per crear una subclasse, s'utilitza la paraula clau <code>extends</code>.</p> JavaScript<pre><code>class Treballador extends Persona {\n  constructor(nom, edat, feina) {\n    // Cridem el constructor de la superclasse (Persona)\n    super(nom, edat);  // super() crida al constructor de la classe pare\n    this.feina = feina; // nova propietat per a la subclasse\n  }\n\n  // M\u00e8tode de la subclasse\n  treballar() {\n    console.log(`${this.nom} est\u00e0 treballant com a ${this.feina}.`);\n  }\n}\n\nconst treballador1 = new Treballador('Pere', 40, 'enginyer');\ntreballador1.saludar(); // Output: Hola, em dic Pere i tinc 40 anys.\ntreballador1.traballar(); // Output: Pere est\u00e0 treballant com a enginyer.\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/JS/classes_herencia/#explicacio-de-lherencia","title":"Explicaci\u00f3 de l'her\u00e8ncia:","text":"<ul> <li> <p><code>extends</code>: Permet a la subclasse heretar les propietats i m\u00e8todes de la classe pare.</p> </li> <li> <p><code>super()</code>: Es crida al constructor de la classe pare. \u00c9s necessari per inicialitzar les propietats de la classe pare abans de definir les pr\u00f2pies de la subclasse.</p> </li> <li> <p>Subclasse: Pot afegir m\u00e8todes propis a m\u00e9s dels m\u00e8todes heretats de la classe pare.</p> </li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/JS/classes_herencia/#4-sobreescriptura-de-metodes","title":"4. Sobreescriptura de m\u00e8todes","text":"<p>A la subclasse, pots sobreescriure un m\u00e8tode de la classe pare. Aix\u00f2 significa que pots redefinir un m\u00e8tode que ja existeix a la classe pare per canviar el seu comportament.</p> JavaScript<pre><code>class Treballador extends Persona {\n  constructor(nom, edat, feina) {\n    super(nom, edat);\n    this.feina = feina;\n  }\n\n  // Sobreescriure el m\u00e8tode saludar de la classe Persona\n  saludar() {\n    console.log(`Hola, em dic ${this.nom} i s\u00f3c ${this.feina}.`);\n  }\n}\n\nconst treballador2 = new Treballador('Anna', 35, 'metgessa');\ntreballador2.saludar(); // Output: Hola, em dic Anna i s\u00f3c metgessa.\n</code></pre> <p>En aquest exemple, el m\u00e8tode <code>saludar</code> a la subclasse <code>Treballador</code> reempla\u00e7a el m\u00e8tode <code>saludar</code> de la classe <code>Persona</code>.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/classes_herencia/#5-propietats-i-metodes-estatics","title":"5. Propietats i m\u00e8todes est\u00e0tics","text":"<p>A m\u00e9s de les propietats i m\u00e8todes d'inst\u00e0ncia, tamb\u00e9 podem tenir propietats i m\u00e8todes est\u00e0tics. Aquests no estan associats a una inst\u00e0ncia de la classe, sin\u00f3 a la classe mateixa.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/classes_herencia/#propietats-i-metodes-estatics","title":"Propietats i m\u00e8todes est\u00e0tics:","text":"JavaScript<pre><code>class Matematica {\n  static PI = 3.1416;  // Propietat est\u00e0tica\n\n  static calcularAreaRadi( radi ) {\n    return Matematica.PI * radi * radi;  // M\u00e8tode est\u00e0tic\n  }\n}\n\nconsole.log(Matematica.PI);  // Output: 3.1416\nconsole.log(Matematica.calcularAreaRadi(5));  // Output: 78.54\n</code></pre> <ul> <li><code>static</code>: S'usa per declarar m\u00e8todes o propietats que pertanyen a la classe i no a les inst\u00e0ncies de la classe.</li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/JS/classes_herencia/#6-getters-i-setters","title":"6. Getters i Setters","text":"<p>Els getters i setters permeten obtenir i modificar les propietats d'una inst\u00e0ncia de manera controlada.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/classes_herencia/#exemple-de-getters-i-setters","title":"Exemple de getters i setters:","text":"JavaScript<pre><code>class Persona {\n  constructor(nom, edat) {\n    this._nom = nom;\n    this._edat = edat;\n  }\n\n  // Getter per obtenir el nom\n  get nom() {\n    return this._nom;\n  }\n\n  // Setter per establir el nom\n  set nom(nouNom) {\n    this._nom = nouNom;\n  }\n\n  // Getter per obtenir l'edat\n  get edat() {\n    return this._edat;\n  }\n\n  // Setter per establir l'edat\n  set edat(novaEdat) {\n    if (novaEdat &gt;= 0) {\n      this._edat = novaEdat;\n    } else {\n      console.log('L\\'edat no pot ser negativa!');\n    }\n  }\n}\n\nconst persona3 = new Persona('Lluis', 28);\nconsole.log(persona3.nom); // Output: Lluis\npersona3.nom = 'Albert'; // Estableix un nou nom\nconsole.log(persona3.nom); // Output: Albert\n\npersona3.edat = -5; // Intentant establir una edat negativa\n</code></pre> <p>Els getters i setters et permeten controlar l'acc\u00e9s i la validaci\u00f3 de les propietats d'una classe.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/classes_herencia/#resum","title":"Resum","text":"<ul> <li>Classes: S\u00f3n plantilles per crear objectes amb propietats i m\u00e8todes. S'utilitza <code>class</code> per definir-les.</li> <li>Her\u00e8ncia: Permet crear subclasses que hereten propietats i m\u00e8todes de les classes pare. S'utilitza <code>extends</code> per crear una subclasse.</li> <li>Sobreescriptura de m\u00e8todes: Les subclasses poden redefinir els m\u00e8todes heretats.</li> <li>M\u00e8todes est\u00e0tics: Pertanyen a la classe en lloc de les inst\u00e0ncies.</li> <li>Getters i Setters: Permeten accedir i modificar propietats de manera controlada.</li> </ul> <p>L'\u00fas de classes i her\u00e8ncia facilita l'estructuraci\u00f3 de codi en JavaScript, fent-lo m\u00e9s modular, reutilitzable i net.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/","title":"Documentaci\u00f3 per configurar MySQL en Docker amb un script SQL i persist\u00e8ncia de dades","text":""},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#documentacio-per-configurar-mysql-en-docker-amb-un-script-sql-i-persistencia-de-dades","title":"Documentaci\u00f3 per configurar MySQL en Docker amb un script SQL i persist\u00e8ncia de dades","text":""},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#1-creacio-del-dockerfile","title":"1. Creaci\u00f3 del Dockerfile","text":"<p>El primer pas \u00e9s crear un Dockerfile personalitzat que utilitzi la imatge oficial de MySQL i que carrega l'arxiu SQL per crear les taules i les dades de la base de dades. Aquest Dockerfile inclour\u00e0 tamb\u00e9 la configuraci\u00f3 necess\u00e0ria per establir la contrasenya de l'usuari <code>root</code>.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#dockerfile","title":"Dockerfile:","text":"Docker<pre><code># Utilitzem la imatge oficial de MySQL com a base\nFROM mysql:8.0\n\n# Establir la contrasenya per a l'usuari root\nENV MYSQL_ROOT_PASSWORD=root\n\n# Copiar l'arxiu SQL al contenidor\nCOPY biblioteca_db_creation_updated.sql /docker-entrypoint-initdb.d/\n\n# Exposar el port 3306\nEXPOSE 3306\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#explicacio","title":"Explicaci\u00f3:","text":"<ul> <li><code>FROM mysql:8.0</code>: Utilitza la imatge oficial de MySQL 8.0.</li> <li><code>ENV MYSQL_ROOT_PASSWORD=root</code>: Estableix la contrasenya de l'usuari root a <code>root</code>.</li> <li><code>COPY biblioteca_db_creation_updated.sql /docker-entrypoint-initdb.d/</code>: Copia l'arxiu SQL al directori especial <code>/docker-entrypoint-initdb.d/</code> perqu\u00e8 MySQL el carregui autom\u00e0ticament al crear la base de dades.</li> <li><code>EXPOSE 3306</code>: Exposa el port 3306 per poder connectar-te a MySQL des de l'exterior.</li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#2-construccio-de-la-imatge-docker","title":"2. Construcci\u00f3 de la imatge Docker","text":"<p>Un cop creat el Dockerfile, utilitza el seg\u00fcent comandament per construir la teva imatge personalitzada de MySQL:</p> Bash<pre><code>docker build -t mysql-biblioteca .\n</code></pre> <p>Aquesta ordre construir\u00e0 una imatge Docker anomenada <code>mysql-biblioteca</code> a partir del Dockerfile i de l'arxiu SQL que has afegit al directori del projecte.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#3-creacio-del-volum-per-persistencia-de-dades","title":"3. Creaci\u00f3 del volum per persist\u00e8ncia de dades","text":"<p>Els volums Docker s'utilitzen per emmagatzemar dades de manera persistent fora del contenidor. Aix\u00f2 permet que les dades no es perdin quan el contenidor es reinicia o s'elimini. Cal crear un volum per MySQL per garantir que les dades es mantinguin segures.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#creacio-del-volum","title":"Creaci\u00f3 del volum:","text":"<p>Docker crear\u00e0 autom\u00e0ticament un volum quan l'executis per primera vegada. Tanmateix, si vols crear i gestionar volums manualment, pots utilitzar aquest comandament:</p> Bash<pre><code>docker volume create mysql_data\n</code></pre> <p>Aquesta comanda crear\u00e0 un volum anomenat <code>mysql_data</code> que s'utilitzar\u00e0 per emmagatzemar les dades de la base de dades MySQL.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#llista-de-volums","title":"Llista de volums:","text":"<p>Per veure els volums disponibles al teu sistema Docker, utilitza el seg\u00fcent comandament:</p> Bash<pre><code>docker volume ls\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#inspeccio-dun-volum","title":"Inspecci\u00f3 d'un volum:","text":"<p>Per veure la ubicaci\u00f3 f\u00edsica del volum i altres detalls, utilitza:</p> Bash<pre><code>docker volume inspect mysql_data\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#4-execucio-del-contenidor-amb-el-volum","title":"4. Execuci\u00f3 del contenidor amb el volum","text":"<p>Un cop tinguem el volum creat i la imatge de Docker constru\u00efda, podem executar el contenidor de MySQL. Per garantir que les dades siguin persistents, utilitzarem el volum <code>mysql_data</code> creat pr\u00e8viament.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#comandament-per-executar-el-contenidor","title":"Comandament per executar el contenidor:","text":"Bash<pre><code>docker run --name mysql-biblioteca -d -p 3306:3306 -v mysql_data:/var/lib/mysql mysql-biblioteca\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#explicacio_1","title":"Explicaci\u00f3:","text":"<ul> <li><code>--name mysql-biblioteca</code>: Assigna un nom al contenidor per identificar-lo f\u00e0cilment.</li> <li><code>-d</code>: Executa el contenidor en segon pla (detached).</li> <li><code>-p 3306:3306</code>: Mapeja el port 3306 del contenidor al port 3306 del teu sistema local (per accedir a MySQL des de fora del contenidor).</li> <li><code>-v mysql_data:/var/lib/mysql</code>: Munteu el volum <code>mysql_data</code> al directori <code>/var/lib/mysql</code> dins del contenidor, que \u00e9s on MySQL guarda les seves dades.</li> <li><code>mysql-biblioteca</code>: Nom de la imatge que hem creat.</li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#5-verificar-la-creacio-de-les-taules","title":"5. Verificar la creaci\u00f3 de les taules","text":"<p>Un cop el contenidor s'ha engegat, l'arxiu SQL es carregar\u00e0 autom\u00e0ticament i crear\u00e0 la base de dades i les taules.</p> <p>Per verificar que les taules s'han creat correctament:</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#accedir-al-contenidor-mysql","title":"Accedir al contenidor MySQL:","text":"Bash<pre><code>docker exec -it mysql-biblioteca mysql -u root -p\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#comprovar-les-taules","title":"Comprovar les taules:","text":"<p>Un cop dins de MySQL, pots veure les taules creades:</p> SQL<pre><code>USE \nSHOW TABLES;\n</code></pre> <p>Si tot ha anat b\u00e9, haur\u00e0s de veure les taules com <code>Recursos</code>, <code>Llibres</code>, <code>Revistes</code>, <code>Pel\u00b7l\u00edcules</code>, <code>Socis</code>, i <code>Pr\u00e9stecs</code>.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#6-accedir-als-volums-de-docker","title":"6. Accedir als volums de Docker","text":"<p>Els volums s\u00f3n utilitzats per MySQL per guardar les dades fora del contenidor. Si vols gestionar els volums o veure les dades, pots fer-ho amb els seg\u00fcents comandaments:</p> <ul> <li>Llistar volums:</li> </ul> Bash<pre><code>docker volume ls\n</code></pre> <ul> <li>Inspeccionar un volum:</li> </ul> Bash<pre><code>docker volume inspect mysql_data\n</code></pre> <ul> <li>Eliminar un volum:</li> </ul> <p>Si alguna vegada vols eliminar un volum, utilitza:</p> Bash<pre><code>docker volume rm mysql_data\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#7-opcio-per-gestionar-la-contrasenya-de-manera-segura-amb-env","title":"7. Opci\u00f3 per gestionar la contrasenya de manera segura amb <code>.env</code>","text":"<p>\u00c9s important evitar passar dades sensibles com la contrasenya directament al Dockerfile. Una opci\u00f3 m\u00e9s segura \u00e9s utilitzar un fitxer <code>.env</code> per gestionar les variables d'entorn com la contrasenya.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#creacio-del-fitxer-env","title":"Creaci\u00f3 del fitxer <code>.env</code>:","text":"<p>Crea un fitxer anomenat <code>.env</code> al directori del teu projecte amb el seg\u00fcent contingut:</p> Text Only<pre><code>MYSQL_ROOT_PASSWORD=root\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#modificar-el-dockerfile","title":"Modificar el Dockerfile:","text":"<p>Elimina la l\u00ednia que defineix <code>ENV MYSQL_ROOT_PASSWORD</code> al Dockerfile. El Dockerfile ser\u00e0 aix\u00ed:</p> Docker<pre><code># Utilitzem la imatge oficial de MySQL com a base\nFROM mysql:8.0\n\n# Copiar l'arxiu SQL al contenidor\nCOPY biblioteca_db_creation_updated.sql /docker-entrypoint-initdb.d/\n\n# Exposar el port 3306\nEXPOSE 3306\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#passar-les-variables-dentorn-al-moment-dexecutar-el-contenidor","title":"Passar les variables d'entorn al moment d'executar el contenidor:","text":"<p>Quan executis el contenidor, utilitza el fitxer <code>.env</code> per passar la contrasenya a Docker:</p> Bash<pre><code>docker run --name mysql-biblioteca --env-file .env -d -p 3306:3306 -v mysql_data:/var/lib/mysql mysql-biblioteca\n</code></pre> <p>Aquesta soluci\u00f3 \u00e9s m\u00e9s segura perqu\u00e8 evita passar la contrasenya directament en la l\u00ednia de comandes o en el Dockerfile.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#conclusio","title":"Conclusi\u00f3","text":"<p>Seguint aquests passos, has creat un contenidor Docker amb MySQL, has automatitzat la c\u00e0rrega d'un script SQL per crear la base de dades i les taules, i has configurat la persist\u00e8ncia de dades mitjan\u00e7ant un volum Docker. Aix\u00ed les teves dades es mantindran segures fins i tot si el contenidor es reinicia o es crea un nou contenidor.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/contenidor_mysql/#resum-dels-passos","title":"Resum dels passos:","text":"<ol> <li>Crear el Dockerfile amb la configuraci\u00f3 de MySQL i el script SQL.</li> <li>Construir la imatge Docker amb <code>docker build</code>.</li> <li>Crear un volum Docker amb <code>docker volume create</code> per garantir la persist\u00e8ncia de les dades.</li> <li>Executar el contenidor amb el volum per emmagatzemar les dades de MySQL.</li> <li>Verificar les taules i les dades dins del contenidor MySQL.</li> <li>Gestionar els volums per mantenir les dades persistents.</li> <li>Opci\u00f3 de gestionar la contrasenya de manera m\u00e9s segura mitjan\u00e7ant un fitxer <code>.env</code>.</li> </ol>"},{"location":"Projecte%20Biblioteca/Pildores/JS/convencio_noms/","title":"Convenci\u00f3 de noms","text":""},{"location":"Projecte%20Biblioteca/Pildores/JS/convencio_noms/#convencio-de-noms","title":"Convenci\u00f3 de noms","text":"<p>Aqu\u00ed tens una descripci\u00f3 de les principals convencions de noms en JavaScript:</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/convencio_noms/#1-camel-case-cas-camell","title":"1. Camel Case (cas camell)","text":"<ul> <li>Variables i funcions s'escriuen amb camelCase, on la primera paraula comen\u00e7a en min\u00fascules i cada paraula subseq\u00fcent comen\u00e7a en maj\u00fascules.</li> <li>Exemple: <code>totalAmount</code>, <code>calculateSum</code>, <code>userName</code></li> </ul> <p>Regla: Comen\u00e7a amb una lletra min\u00fascula i utilitza maj\u00fascules per separar les paraules.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/convencio_noms/#2-pascal-case-tambe-conegut-com-uppercamelcase","title":"2. Pascal Case (tamb\u00e9 conegut com UpperCamelCase)","text":"<ul> <li>Classes i constructors s'escriuen amb PascalCase, que \u00e9s similar al camelCase, per\u00f2 amb la primera lletra de la primera paraula tamb\u00e9 en maj\u00fascules.</li> <li>Exemple: <code>Person</code>, <code>CarModel</code>, <code>DatabaseConnection</code></li> </ul> <p>Regla: Comen\u00e7a amb una lletra maj\u00fascula i utilitza maj\u00fascules per separar les paraules.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/convencio_noms/#3-snake-case","title":"3. Snake Case","text":"<ul> <li>No \u00e9s molt com\u00fa a JavaScript, per\u00f2 es fa servir en alguns altres llenguatges (com Python o bases de dades) o per noms de fitxers. En aquest cas, les paraules es separen amb guions baixos (_).</li> <li>Exemple: <code>user_name</code>, <code>total_amount</code>, <code>car_model</code></li> </ul> <p>Nota: A JavaScript, aquesta convenci\u00f3 \u00e9s menys utilitzada, per\u00f2 podries trobar-la en API o bases de dades.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/convencio_noms/#4-kebab-case","title":"4. Kebab Case","text":"<ul> <li>Similar al snake_case, per\u00f2 utilitzant un gui\u00f3 (<code>-</code>) per separar les paraules. Aquesta convenci\u00f3 s\u2019utilitza generalment en noms de fitxers, URLs o en entorns com CSS o en noms d'arxius.</li> <li>Exemple: <code>user-name</code>, <code>total-amount</code>, <code>car-model</code></li> </ul> <p>Nota: No s'usa per a noms de variables o funcions en codi JavaScript, per\u00f2 pot ser \u00fatil per noms de fitxers, carpetes o rutes.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/convencio_noms/#5-constantes-constants","title":"5. Constantes (constants)","text":"<ul> <li>Per a les constants que no canvien (\u00e9s a dir, valors que es mantenen igual durant tota l'execuci\u00f3), s'usa UPPERCASE amb guions baixos per separar les paraules.</li> <li>Exemple: <code>MAX_SIZE</code>, <code>PI_VALUE</code>, <code>DEFAULT_LANGUAGE</code></li> </ul> <p>Regla: Escriu les constants en maj\u00fascules i separa les paraules amb guions baixos.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/convencio_noms/#6-evitar-abreviacions-poc-clares","title":"6. Evitar abreviacions poc clares","text":"<ul> <li>\u00c9s una bona pr\u00e0ctica evitar les abreviacions que poden ser dif\u00edcils de comprendre per altres desenvolupadors. Per exemple, en lloc de <code>str</code> per a una cadena de text, utilitza <code>string</code>, i en lloc de <code>num</code> utilitza <code>number</code>.</li> <li>Exemple: <code>userName</code> en comptes de <code>usrNm</code>, <code>totalAmount</code> en comptes de <code>totAmt</code>.</li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/JS/convencio_noms/#7-metodes-daccio","title":"7. M\u00e8todes d'Acci\u00f3","text":"<ul> <li>Els noms de les funcions o m\u00e8todes han de ser verbs perqu\u00e8 representen una acci\u00f3 que el codi realitza.</li> <li>Exemple: <code>getUserName()</code>, <code>calculateTotalAmount()</code>, <code>sendEmail()</code></li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/JS/convencio_noms/#8-evitar-noms-generals-o-massa-generics","title":"8. Evitar noms generals o massa gen\u00e8rics","text":"<ul> <li>Intenta evitar noms com <code>data</code>, <code>info</code>, <code>item</code>, perqu\u00e8 s\u00f3n massa generals i no proporcionen molta informaci\u00f3 sobre qu\u00e8 fa la variable o funci\u00f3.</li> <li>Exemple millor: <code>userData</code>, <code>orderList</code>, <code>productItems</code>.</li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/JS/convencio_noms/#9-evitar-noms-reservats-o-conflictes-amb-paraules-clau","title":"9. Evitar noms reservats o conflictes amb paraules clau","text":"<ul> <li>Evita utilitzar paraules clau del llenguatge (com <code>class</code>, <code>return</code>, <code>let</code>, <code>for</code>, etc.) com a noms de variables o funcions.</li> <li>Exemple: No utilitzis <code>let</code>, <code>const</code>, <code>return</code> com a noms de variables.</li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/JS/convencio_noms/#10-variables-booleans","title":"10. Variables booleans","text":"<ul> <li>Per a variables booleans (que es poden establir com <code>true</code> o <code>false</code>), \u00e9s habitual utilitzar una forma interrogativa per al nom, generalment amb un prefix com <code>is</code>, <code>has</code>, <code>can</code> o <code>should</code>.</li> <li>Exemple: <code>isValid</code>, <code>hasPermission</code>, <code>canEdit</code>, <code>shouldUpdate</code></li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/JS/convencio_noms/#11-evitar-lus-de-_-guio-baix-inicial","title":"11. Evitar l'\u00fas de _ (gui\u00f3 baix inicial)","text":"<ul> <li>A JavaScript, la convenci\u00f3 de utilitzar un gui\u00f3 baix inicial <code>_</code> per indicar que una variable \u00e9s privada \u00e9s habitual en alguns codi, per\u00f2 no \u00e9s una pr\u00e0ctica est\u00e0ndard del llenguatge. Aquest comportament sol ser com\u00fa quan es fa servir amb <code>class</code> i m\u00e8todes privats.</li> </ul> <p>Exemple: <code>_privateVar</code>, <code>_calculateTotal()</code></p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/convencio_noms/#12-noms-de-funcions-i-variables-en-plural-o-singular","title":"12. Noms de funcions i variables en plural o singular","text":"<ul> <li>Arrays o llistes: Si una variable cont\u00e9 diversos elements, \u00e9s habitual utilitzar noms en plural.</li> <li>Exemple: <code>users</code> (per a un array de persones), <code>items</code> (per a una llista d'objectes).</li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/JS/convencio_noms/#resum-de-les-convencions","title":"Resum de les convencions:","text":"<ul> <li>Camel Case: per a variables i funcions (<code>totalAmount</code>, <code>calculateSum</code>)</li> <li>Pascal Case: per a classes i constructors (<code>Person</code>, <code>CarModel</code>)</li> <li>Snake Case: per a noms de fitxers o en alguns entorns (per exemple, <code>user_name</code>)</li> <li>Kebab Case: per a noms d'arxius i URLs (per exemple, <code>user-name</code>)</li> <li>UPPERCASE: per a constants (<code>MAX_SIZE</code>, <code>PI_VALUE</code>)</li> </ul> <p>Seguir aquestes convencions ajuda a mantenir el codi net, organitzat i f\u00e0cil de llegir, especialment quan treballes en projectes col\u00b7laboratius amb altres desenvolupadors.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/entrada_eixida/","title":"Entrada eixida en node","text":""},{"location":"Projecte%20Biblioteca/Pildores/JS/entrada_eixida/#entradaeixida-en-nodejs","title":"Entrada/eixida en node.js","text":"<p>El m\u00f2dul <code>readline</code> de Node.js \u00e9s una eina poderosa per manejar entrades i sortides de la l\u00ednia de comandes de manera interactiva. Aquest m\u00f2dul permet llegir l\u00ednies d'entrada del teclat (com a una aplicaci\u00f3 de consola) i gestionar l'output (sortida) a la terminal.</p> <p>Aqu\u00ed et mostrar\u00e9 com utilitzar <code>readline</code> per llegir i escriure informaci\u00f3 a la l\u00ednia de comandes amb exemples simples.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/entrada_eixida/#1-configurar-readline-per-llegir-dades-de-lusuari","title":"1. Configurar <code>readline</code> per llegir dades de l'usuari","text":"<p>Per comen\u00e7ar, primer hem d'importar el m\u00f2dul <code>readline</code> i configurar un interface per la lectura i l'escriptura.</p> JavaScript<pre><code>const readline = require('readline');\n\n// Crear una interf\u00edcie per llegir de la consola (entrada) i escriure a la consola (sortida)\nconst rl = readline.createInterface({\n  input: process.stdin,  // Entrada des de la l\u00ednia de comandes\n  output: process.stdout  // Sortida a la l\u00ednia de comandes\n});\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/JS/entrada_eixida/#2-llegir-lentrada-de-lusuari","title":"2. Llegir l'entrada de l'usuari","text":"<p>Un cop tinguem l'interf\u00edcie configurada, podem utilitzar el m\u00e8tode <code>question</code> per fer preguntes a l'usuari i capturar les respostes.</p> JavaScript<pre><code>// Fer una pregunta a l'usuari\nrl.question('Com et dius? ', (nom) =&gt; {\n  console.log(`Hola, ${nom}!`);\n\n  // Tanquem la interf\u00edcie una vegada hem acabat\n  rl.close();\n});\n</code></pre> <p>Explicaci\u00f3:</p> <ul> <li><code>question</code> fa una pregunta i, quan l'usuari escriu una resposta, la resposta es passa com a par\u00e0metre a la funci\u00f3 de callback (en aquest cas, <code>nom</code>).</li> <li><code>rl.close()</code> tanca l'interf\u00edcie un cop hem acabat de llegir les dades.</li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/JS/entrada_eixida/#3-multiples-preguntes","title":"3. M\u00faltiples preguntes","text":"<p>Si vols fer diverses preguntes, pots encadenar-les usant diverses crides a <code>question</code>. Per\u00f2 tamb\u00e9 \u00e9s habitual utilitzar l'entrada en s\u00e8rie amb un callback o promesa per gestionar preguntes m\u00faltiples.</p> <p>Exemple de diverses preguntes amb <code>readline</code>:</p> JavaScript<pre><code>rl.question('Com et dius? ', (nom) =&gt; {\n  rl.question('Quants anys tens? ', (edat) =&gt; {\n    console.log(`Hola, ${nom}, tens ${edat} anys.`);\n\n    // Tanquem la interf\u00edcie un cop hem acabat\n    rl.close();\n  });\n});\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/JS/entrada_eixida/#4-usar-asyncawait-amb-promeses","title":"4. Usar <code>async/await</code> amb Promeses","text":"<p>Si vols que el codi sigui m\u00e9s net i f\u00e0cil de llegir, pots convertir les preguntes en promeses i utilitzar <code>async/await</code>.</p> <p>Aqu\u00ed tens un exemple d'\u00fas de <code>async/await</code> amb <code>readline</code>:</p> JavaScript<pre><code>const readline = require('readline');\n\n// Crear la interf\u00edcie readline\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\n// Funci\u00f3 per fer preguntes de manera as\u00edncrona amb promeses\nfunction preguntar(pregunta) {\n  return new Promise((resolve, reject) =&gt; {\n    rl.question(pregunta, (resposta) =&gt; {\n      resolve(resposta);\n    });\n  });\n}\n\n// Funci\u00f3 principal as\u00edncrona\nasync function obtenirInformacio() {\n  const nom = await preguntar('Com et dius? ');\n  const edat = await preguntar('Quants anys tens? ');\n\n  console.log(`Hola, ${nom}, tens ${edat} anys.`);\n\n  // Tanquem la interf\u00edcie\n  rl.close();\n}\n\nobtenirInformacio();\n</code></pre> <p>Explicaci\u00f3:</p> <ul> <li>La funci\u00f3 <code>preguntar</code> retorna una promesa que es resol amb la resposta de l'usuari.</li> <li>A la funci\u00f3 <code>obtenirInformacio</code>, utilitzem <code>await</code> per esperar que cada pregunta sigui contestada abans de passar a la seg\u00fcent.</li> <li><code>rl.close()</code> es crida un cop acabem de fer totes les preguntes.</li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/JS/entrada_eixida/#5-maneig-dentrada-i-sortida-per-linies","title":"5. Maneig d'entrada i sortida per l\u00ednies","text":"<p>A m\u00e9s de <code>question</code>, tamb\u00e9 podem llegir l\u00ednies de manera cont\u00ednua (per exemple, fins que l'usuari premi el teclat Ctrl + C o escrigui una l\u00ednia buida).</p> JavaScript<pre><code>const readline = require('readline');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\n// Llegeix cada l\u00ednia d'entrada de l'usuari fins que el proc\u00e9s sigui tancat\nconsole.log('Escriu text (Ctrl+C per sortir):');\nrl.on('line', (input) =&gt; {\n  console.log(`Has escrit: ${input}`);\n});\n\n// Tanquem la interf\u00edcie quan es pressiona Ctrl+C o l'usuari tanca la terminal\nrl.on('close', () =&gt; {\n  console.log('Interf\u00edcie tancada. Fins aviat!');\n  process.exit(0);  // Finalitza el proc\u00e9s\n});\n</code></pre> <p>Explicaci\u00f3:</p> <ul> <li>Quan l'usuari escriu alguna cosa i prem <code>Enter</code>, l'esdeveniment <code>line</code> es dispara, i podem processar el que s'ha escrit.</li> <li>Quan l'usuari prem <code>Ctrl+C</code>, l'esdeveniment <code>close</code> es dispara i el proc\u00e9s finalitza.</li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/JS/entrada_eixida/#resum","title":"Resum:","text":"<ul> <li>Entrada de dades: El m\u00f2dul <code>readline</code> s'utilitza per llegir dades de la l\u00ednia de comandes.</li> <li>Sortida de dades: Es pot utilitzar per mostrar missatges a la terminal.</li> <li>Gesti\u00f3 de preguntes: Amb <code>question</code> podem fer preguntes interactives.</li> <li>L\u00ednies cont\u00ednues: Usant l'esdeveniment <code>line</code>, podem llegir diverses l\u00ednies d'entrada.</li> <li>Manejo amb Promeses i async/await: Per facilitar la lectura del codi i la gesti\u00f3 de fluxos as\u00edncrons, podem utilitzar Promeses i <code>async/await</code>.</li> </ul> <p>Amb aix\u00f2, pots crear aplicacions de consola interactives i din\u00e0miques amb Node.js.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/funcions_arrays/","title":"Funcions sobre arrays","text":""},{"location":"Projecte%20Biblioteca/Pildores/JS/funcions_arrays/#funcions-sobre-arrays","title":"Funcions sobre arrays","text":"<p>Les funcions <code>map()</code>, <code>filter()</code> i <code>reduce()</code> s\u00f3n m\u00e8todes molt utilitzats en JavaScript per treballar amb arrays de manera funcional. Aquestes funcions ajuden a transformar, filtrar i reduir dades en un array de manera concisa i expressiva, sense la necessitat d\u2019utilitzar bucles expl\u00edcits. S\u00f3n molt \u00fatils quan volem treballar amb dades de manera immutables (sense modificar l'array original).</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/funcions_arrays/#1-map","title":"1. <code>map()</code>","text":"<p>La funci\u00f3 <code>map()</code> s'utilitza per transformar els elements d'un array. Aquesta funci\u00f3 aplica una funci\u00f3 a cada element de l'array i retorna un nou array amb els resultats.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/funcions_arrays/#sintaxi","title":"Sintaxi:","text":"JavaScript<pre><code>array.map(callback(currentValue, index, array))\n</code></pre> <ul> <li><code>callback</code>: \u00c9s una funci\u00f3 que s'aplica a cada element de l'array.</li> <li><code>currentValue</code>: L'element actual que s'est\u00e0 processant.</li> <li><code>index</code> (opcional): L'\u00edndex de l'element actual.</li> <li><code>array</code> (opcional): L'array original.</li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/JS/funcions_arrays/#exemple","title":"Exemple:","text":"<p>Suposem que volem multiplicar cada n\u00famero d'un array per 2:</p> JavaScript<pre><code>const nombres = [1, 2, 3, 4, 5];\nconst multiplicats = nombres.map(num =&gt; num * 2);\n\nconsole.log(multiplicats);  // Output: [2, 4, 6, 8, 10]\n</code></pre> <p>En aquest exemple, <code>map()</code> aplica la funci\u00f3 <code>num =&gt; num * 2</code> a cada element de l'array <code>nombres</code>, retornant un nou array amb els valors multiplicats per 2.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/funcions_arrays/#2-filter","title":"2. <code>filter()</code>","text":"<p>La funci\u00f3 <code>filter()</code> s'utilitza per filtrar elements d'un array segons una condici\u00f3. Aquesta funci\u00f3 retorna un nou array amb nom\u00e9s els elements que compleixen la condici\u00f3 especificada a la funci\u00f3 de callback.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/funcions_arrays/#sintaxi_1","title":"Sintaxi:","text":"JavaScript<pre><code>array.filter(callback(currentValue, index, array))\n</code></pre> <ul> <li><code>callback</code>: Funci\u00f3 que defineix la condici\u00f3 per filtrar els elements.</li> <li><code>currentValue</code>: L'element actual que s'est\u00e0 processant.</li> <li><code>index</code> (opcional): L'\u00edndex de l'element actual.</li> <li><code>array</code> (opcional): L'array original.</li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/JS/funcions_arrays/#exemple_1","title":"Exemple:","text":"<p>Suposem que volem filtrar els nombres imparells d'un array:</p> JavaScript<pre><code>const nombres = [1, 2, 3, 4, 5];\nconst imparells = nombres.filter(num =&gt; num % 2 !== 0);\n\nconsole.log(imparells);  // Output: [1, 3, 5]\n</code></pre> <p>En aquest exemple, <code>filter()</code> filtra els elements que compleixen la condici\u00f3 <code>num % 2 !== 0</code> (\u00e9s a dir, els imparells).</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/funcions_arrays/#3-reduce","title":"3. <code>reduce()</code>","text":"<p>La funci\u00f3 <code>reduce()</code> s'utilitza per reducir un array a un sol valor. La funci\u00f3 de callback que es passa a <code>reduce()</code> agafa dos valors a cada iteraci\u00f3: un acumulador (el valor que es va construint) i el valor actual de l'array.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/funcions_arrays/#sintaxi_2","title":"Sintaxi:","text":"JavaScript<pre><code>array.reduce(callback(accumulator, currentValue, index, array), initialValue)\n</code></pre> <ul> <li><code>callback</code>: Funci\u00f3 que es crida per a cada element.</li> <li><code>accumulator</code>: L'acumulador (el valor que es va construint a mesura que recorrem l'array).</li> <li><code>currentValue</code>: El valor actual de l'element de l'array.</li> <li><code>initialValue</code> (opcional): Valor inicial per a l'acumulador (si no es passa, el primer element de l'array s'utilitza com a valor inicial).</li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/JS/funcions_arrays/#exemple_2","title":"Exemple:","text":"<p>Suposem que volem sumar tots els elements d'un array:</p> JavaScript<pre><code>const nombres = [1, 2, 3, 4, 5];\nconst suma = nombres.reduce((acc, num) =&gt; acc + num, 0);\n\nconsole.log(suma);  // Output: 15\n</code></pre> <p>En aquest exemple, <code>reduce()</code> acumula els valors de l'array <code>nombres</code> sumant-los a l'acumulador <code>acc</code>. El valor inicial de l'acumulador \u00e9s <code>0</code>.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/funcions_arrays/#exemple-amb-objectes","title":"Exemple amb objectes:","text":"<p>Imagina que tens un array de persones i vols obtenir l'edat total de totes les persones:</p> JavaScript<pre><code>const persones = [\n  { nom: 'Joan', edat: 30 },\n  { nom: 'Maria', edat: 25 },\n  { nom: 'Pere', edat: 35 }\n];\n\nconst edatTotal = persones.reduce((acc, persona) =&gt; acc + persona.edat, 0);\n\nconsole.log(edatTotal);  // Output: 90\n</code></pre> <p>Aqu\u00ed, <code>reduce()</code> acumula les edats de les persones en l'acumulador <code>acc</code>, retornant la suma total de les edats.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/funcions_arrays/#resum-de-les-funcions","title":"Resum de les funcions:","text":"Funci\u00f3 Descripci\u00f3 Exemple <code>map()</code> Aplica una funci\u00f3 a cada element d'un array i retorna un nou array. <code>[1, 2, 3].map(num =&gt; num * 2)</code> \u2192 <code>[2, 4, 6]</code> <code>filter()</code> Filtra els elements d'un array segons una condici\u00f3 i retorna un array amb els elements que compleixen la condici\u00f3. <code>[1, 2, 3, 4].filter(num =&gt; num % 2 === 0)</code> \u2192 <code>[2, 4]</code> <code>reduce()</code> Redueix un array a un sol valor, acumulant els resultats a trav\u00e9s d'un proc\u00e9s iteratiu. <code>[1, 2, 3].reduce((acc, num) =&gt; acc + num, 0)</code> \u2192 <code>6</code>"},{"location":"Projecte%20Biblioteca/Pildores/JS/funcions_arrays/#casos-dus-comunes","title":"Casos d'\u00fas comunes:","text":"<ul> <li><code>map()</code>: Quan necessitem transformar cada element d'un array (per exemple, aplicar una operaci\u00f3 matem\u00e0tica o modificar l'estructura de cada element).</li> <li><code>filter()</code>: Quan necessitem filtrar elements d'un array basant-nos en alguna condici\u00f3 (per exemple, obtenir un subconjunt d'elements que compleixen una regla espec\u00edfica).</li> <li><code>reduce()</code>: Quan necessitem reduir un array a un \u00fanic valor (per exemple, la suma total d'una llista de n\u00fameros, la concatenaci\u00f3 de textos, o la creaci\u00f3 d'un objecte).</li> </ul> <p>Aquestes funcions permeten escriure codi m\u00e9s net i funcional, evitant l'\u00fas de bucles <code>for</code> expl\u00edcits i fent el codi m\u00e9s llegible.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/import_export/","title":"Import i export","text":""},{"location":"Projecte%20Biblioteca/Pildores/JS/import_export/#importacio-exportacio","title":"Importaci\u00f3 exportaci\u00f3","text":"<p>A JavaScript, l'exportaci\u00f3 i la importaci\u00f3 de m\u00f2duls \u00e9s una pr\u00e0ctica essencial per organitzar el codi en diferents fitxers i permetre'n la reutilitzaci\u00f3. Aix\u00f2 ajuda a mantenir el codi modular, llegible i f\u00e0cil de mantenir.</p> <p>JavaScript t\u00e9 diferents maneres d'exportar i importar m\u00f2duls. La m\u00e9s comuna \u00e9s a trav\u00e9s dels m\u00f2duls ES6 (<code>import</code>/<code>export</code>), que \u00e9s el m\u00e8tode est\u00e0ndard per treballar amb m\u00f2duls a JavaScript modern. A m\u00e9s, tamb\u00e9 existeix el sistema de m\u00f2duls de CommonJS, que \u00e9s el que s'utilitza principalment en Node.js.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/import_export/#1-moduls-es6-importexport","title":"1. M\u00f2duls ES6 (<code>import</code>/<code>export</code>)","text":"<p>Els m\u00f2duls ES6 s\u00f3n la forma est\u00e0ndard d'exportar i importar m\u00f2duls a JavaScript. Aquest sistema \u00e9s compatible amb la majoria de navegadors moderns i es pot utilitzar tamb\u00e9 en Node.js amb l'extensi\u00f3 <code>.mjs</code> o habilitant el suport a m\u00f2duls a trav\u00e9s de la configuraci\u00f3 del <code>package.json</code>.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/import_export/#exportar-des-dun-modul-fitxer-js","title":"Exportar des d'un m\u00f2dul (fitxer <code>.js</code>):","text":"<p>Hi ha dues maneres d'exportar entitats (variables, funcions, classes, etc.) d'un m\u00f2dul: exportaci\u00f3 an\u00f2nima i exportaci\u00f3 anomenada.</p> <p>Exportaci\u00f3 an\u00f2nima: Es fa servir per exportar nom\u00e9s una entitat per m\u00f2dul. Pots exportar una variable, funci\u00f3 o classe directament quan la defines.</p> JavaScript<pre><code>// fitxer 'math.js'\n\n// Exportaci\u00f3 d'una funci\u00f3\nexport function suma(a, b) {\n  return a + b;\n}\n\n// Exportaci\u00f3 de m\u00faltiples entitats\nconst pi = 3.1416;\nexport { pi };\n</code></pre> <p>Exportaci\u00f3 anomenada: Tamb\u00e9 es poden exportar m\u00faltiples entitats d'un mateix m\u00f2dul.</p> JavaScript<pre><code>// fitxer 'math.js'\n\nconst pi = 3.1416;\nconst suma = (a, b) =&gt; a + b;\n\nexport { pi, suma };\n</code></pre> <p>Tamb\u00e9 pots fer una exportaci\u00f3 anomenada m\u00e9s compacta en el mateix moment de la declaraci\u00f3:</p> JavaScript<pre><code>// fitxer 'math.js'\nexport const pi = 3.1416;\nexport const suma = (a, b) =&gt; a + b;\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/JS/import_export/#importar-un-modul-fitxer-js","title":"Importar un m\u00f2dul (fitxer <code>.js</code>):","text":"<p>Per importar els m\u00f2duls en un altre fitxer, utilitzem <code>import</code> per a les exportacions anomenades i <code>import</code> tamb\u00e9 per a l'exportaci\u00f3 per defecte.</p> <p>Importaci\u00f3 d'exportacions anomenades:</p> JavaScript<pre><code>// fitxer 'app.js'\n\nimport { suma, pi } from './math.js';\n\nconsole.log(suma(2, 3));  // Output: 5\nconsole.log(pi);  // Output: 3.1416\n</code></pre> <p>Importaci\u00f3 d'exportaci\u00f3 per defecte:</p> <p>Si nom\u00e9s s'exporta una entitat (per exemple, una funci\u00f3 o una classe), es pot utilitzar l'exportaci\u00f3 per defecte.</p> JavaScript<pre><code>// fitxer 'math.js'\nexport default function suma(a, b) {\n  return a + b;\n}\n\n// fitxer 'app.js'\nimport suma from './math.js';\n\nconsole.log(suma(2, 3));  // Output: 5\n</code></pre> <p>Importar tot el m\u00f2dul: Si vols importar tot el contingut del m\u00f2dul i utilitzar-lo sota un \u00fanic nom, pots fer-ho aix\u00ed:</p> JavaScript<pre><code>// fitxer 'app.js'\nimport * as math from './math.js';\n\nconsole.log(math.suma(2, 3));  // Output: 5\nconsole.log(math.pi);  // Output: 3.1416\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/JS/import_export/#2-moduls-commonjs-nodejs","title":"2. M\u00f2duls CommonJS (Node.js)","text":"<p>A Node.js, el sistema de m\u00f2duls m\u00e9s antic utilitza CommonJS. En aquest sistema, les entitats es poden exportar amb <code>module.exports</code> i importar amb <code>require()</code>.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/import_export/#exportacio-amb-commonjs","title":"Exportaci\u00f3 amb CommonJS:","text":"JavaScript<pre><code>// fitxer 'math.js'\n\n// Exportaci\u00f3 de funci\u00f3 amb module.exports\nmodule.exports.suma = function(a, b) {\n  return a + b;\n};\n\n// O b\u00e9, exportar tot a trav\u00e9s de module.exports\nmodule.exports = {\n  pi: 3.1416,\n  suma: function(a, b) {\n    return a + b;\n  }\n};\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/JS/import_export/#importacio-amb-commonjs","title":"Importaci\u00f3 amb CommonJS:","text":"JavaScript<pre><code>// fitxer 'app.js'\n\nconst math = require('./math.js');\n\nconsole.log(math.suma(2, 3));  // Output: 5\nconsole.log(math.pi);  // Output: 3.1416\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/JS/import_export/#3-com-utilitzar-importexport-a-nodejs","title":"3. Com utilitzar <code>import</code>/<code>export</code> a Node.js?","text":"<p>Si utilitzes Node.js, de forma predeterminada, es fa servir CommonJS. No obstant aix\u00f2, a partir de Node.js 14 i amb l'\u00fas de l'extensi\u00f3 <code>.mjs</code> o habilitant <code>\"type\": \"module\"</code> al fitxer <code>package.json</code>, pots utilitzar m\u00f2duls ES6.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/import_export/#exemple-de-configuracio-per-a-nodejs-moduls-es6","title":"Exemple de configuraci\u00f3 per a Node.js (m\u00f2duls ES6):","text":"<ol> <li>Afegeix <code>\"type\": \"module\"</code> al teu fitxer <code>package.json</code>:</li> </ol> JSON<pre><code>{\n  \"type\": \"module\"\n}\n</code></pre> <ol> <li>Despr\u00e9s, pots utilitzar <code>import</code> i <code>export</code> a Node.js:</li> </ol> JavaScript<pre><code>// fitxer 'math.mjs'\nexport function suma(a, b) {\n  return a + b;\n}\n\n// fitxer 'app.mjs'\nimport { suma } from './math.mjs';\n\nconsole.log(suma(2, 3));  // Output: 5\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/JS/import_export/#4-diferencies-entre-importexport-i-requiremoduleexports","title":"4. Difer\u00e8ncies entre <code>import/export</code> i <code>require/module.exports</code>","text":"<ul> <li>Sintaxi: <code>import/export</code> \u00e9s la sintaxi est\u00e0ndard per a JavaScript modern, mentre que <code>require/module.exports</code> \u00e9s la sintaxi utilitzada per CommonJS, el sistema original de m\u00f2duls de Node.js.</li> <li>As\u00edncrones: <code>require()</code> es carrega de manera sincr\u00f2nica, mentre que <code>import</code> es fa de manera as\u00edncrona (pot ser important quan es treballa amb aplicacions web).</li> <li>Compatibilitat: <code>import/export</code> \u00e9s compatible amb els navegadors moderns i la majoria d'entorns que implementen JavaScript, mentre que <code>require()</code> \u00e9s espec\u00edfic de Node.js.</li> </ul>"},{"location":"Projecte%20Biblioteca/Pildores/JS/import_export/#5-exportacio-i-importacio-per-defecte","title":"5. Exportaci\u00f3 i importaci\u00f3 per defecte","text":"<p>Quan utilitzes exportaci\u00f3 per defecte, nom\u00e9s es pot exportar una sola entitat, i pots importar-la sense utilitzar claus.</p>"},{"location":"Projecte%20Biblioteca/Pildores/JS/import_export/#exemple-dexportacio-per-defecte-i-importacio","title":"Exemple d'exportaci\u00f3 per defecte i importaci\u00f3:","text":"<p>Exportaci\u00f3 per defecte:</p> JavaScript<pre><code>// fitxer 'math.js'\nexport default function suma(a, b) {\n  return a + b;\n}\n</code></pre> <p>Importaci\u00f3 per defecte:</p> JavaScript<pre><code>// fitxer 'app.js'\nimport suma from './math.js';\n\nconsole.log(suma(2, 3));  // Output: 5\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/JS/import_export/#resum","title":"Resum:","text":"<ol> <li>ES6 (<code>import/export</code>): Utilitzat per a m\u00f2duls moderns a JavaScript. Utilitza <code>export</code> per exportar i <code>import</code> per importar m\u00f2duls.</li> <li>CommonJS (<code>require/module.exports</code>): Utilitzat principalment a Node.js. <code>module.exports</code> s'utilitza per exportar, i <code>require()</code> per importar.</li> <li>Node.js i m\u00f2duls ES6: A partir de Node.js 14, pots utilitzar m\u00f2duls ES6 si afegeixes <code>\"type\": \"module\"</code> al fitxer <code>package.json</code> o utilitzes l'extensi\u00f3 <code>.mjs</code>.</li> <li>Exportacions per defecte: S'exporta una sola entitat per m\u00f2dul i s'importa sense claus.</li> </ol> <p>Les convencions d'exportaci\u00f3 i importaci\u00f3 permeten estructurar el teu codi en m\u00f2duls reutilitzables, millorant la llegibilitat i la mantenibilitat del projecte.</p>"},{"location":"Projecte%20Biblioteca/Pildores/Node/npm_init/","title":"Comencem un projecte","text":""},{"location":"Projecte%20Biblioteca/Pildores/Node/npm_init/#projectes-node","title":"Projectes node","text":"<p>Aqu\u00ed tens un resum clar de <code>npm init</code>, com instal\u00b7lar Nodemon i com llan\u00e7ar el teu projecte en mode de depuraci\u00f3:</p>"},{"location":"Projecte%20Biblioteca/Pildores/Node/npm_init/#1-npm-init-iniciar-un-projecte-de-nodejs","title":"1. <code>npm init</code> - Iniciar un projecte de Node.js","text":"<p>Per comen\u00e7ar un projecte de Node.js, utilitzem <code>npm init</code> per crear el fitxer `package.json, que cont\u00e9 la configuraci\u00f3 del projecte i les depend\u00e8ncies.</p> <ul> <li>Com iniciar un projecte:</li> </ul> Bash<pre><code>npm init\n</code></pre> <p>Aquesta comanda et far\u00e0 una s\u00e8rie de preguntes per configurar el teu projecte (nom, versi\u00f3, descripci\u00f3, etc.). Si vols saltar-te les preguntes i utilitzar valors per defecte, pots fer-ho amb:</p> Bash<pre><code>npm init -y\n</code></pre> <p>Aix\u00f2 generar\u00e0 autom\u00e0ticament un <code>package.json</code> amb els valors per defecte.</p>"},{"location":"Projecte%20Biblioteca/Pildores/Node/npm_init/#2-installar-nodemon","title":"2. Instal\u00b7lar Nodemon","text":"<p>Nodemon \u00e9s una eina \u00fatil per a la depuraci\u00f3 i per executar projectes de Node.js de manera autom\u00e0tica, recarregant el codi quan detecta canvis als fitxers.</p> <ul> <li>Instal\u00b7lar Nodemon globalment (per poder utilitzar-lo en qualsevol projecte):</li> </ul> Bash<pre><code>npm install -g nodemon\n</code></pre> <ul> <li>Instal\u00b7lar Nodemon localment com a depend\u00e8ncia de desenvolupament (recomanat per al projecte):</li> </ul> Bash<pre><code>npm install --save-dev nodemon\n</code></pre> <p>Aix\u00f2 afegir\u00e0 Nodemon com a depend\u00e8ncia de desenvolupament al fitxer <code>package.json</code>.</p>"},{"location":"Projecte%20Biblioteca/Pildores/Node/npm_init/#3-llancar-el-projecte-en-mode-de-depuracio","title":"3. Llan\u00e7ar el projecte en mode de depuraci\u00f3","text":"<p>Per executar el teu projecte en mode de depuraci\u00f3, pots afegir un script de depuraci\u00f3 al <code>package.json</code> i utilitzar <code>npm test</code> per llan\u00e7ar-lo.</p>"},{"location":"Projecte%20Biblioteca/Pildores/Node/npm_init/#opcion-1-mode-de-depuracio-amb-nodejs","title":"Opci\u00f3n 1: Mode de depuraci\u00f3 amb Node.js","text":"<p>Modifica el camp <code>scripts</code> a <code>package.json</code> per incloure la comanda que llan\u00e7ar\u00e0 el teu projecte en mode de depuraci\u00f3:</p> JSON<pre><code>{\n  \"scripts\": {\n    \"test\": \"node --inspect-brk index.js\"\n  }\n}\n</code></pre> <ul> <li><code>--inspect-brk</code>: Inicia el depurador de Node.js i atura l'execuci\u00f3 a la primera l\u00ednia, esperant una connexi\u00f3 del depurador.</li> <li><code>index.js</code>: Substitueix pel teu fitxer principal del projecte.</li> </ul> <p>Un cop configurat, pots executar:</p> Bash<pre><code>npm test\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/Node/npm_init/#opcion-2-mode-de-depuracio-amb-nodemon","title":"Opci\u00f3n 2: Mode de depuraci\u00f3 amb Nodemon","text":"<p>Si vols utilitzar Nodemon per reiniciar autom\u00e0ticament el projecte quan facis canvis, pots afegir-ho d'aquesta manera al teu <code>package.json</code>:</p> JSON<pre><code>{\n  \"scripts\": {\n    \"test\": \"nodemon --inspect-brk index.js\"\n  }\n}\n</code></pre> <p>Aix\u00f2 far\u00e0 que Nodemon executi el teu projecte en mode de depuraci\u00f3 i el reinici\u00ef autom\u00e0ticament quan facis canvis en el codi.</p> <p>Un cop configurat, executa:</p> Bash<pre><code>npm test\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/Node/npm_init/#4-conectar-se-al-depurador","title":"4. Conectar-se al depurador","text":"<p>Quan utilitzis <code>--inspect-brk</code>, la depuraci\u00f3 es parar\u00e0 a la primera l\u00ednia del codi. Pots connectar-te al depurador a trav\u00e9s de:</p> <ul> <li>Chrome: Ves a <code>chrome://inspect</code> per veure els processos de depuraci\u00f3.</li> <li>Visual Studio Code: Crea una configuraci\u00f3 de depuraci\u00f3 a <code>launch.json</code> com segueix:</li> </ul> JSON<pre><code>{\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"type\": \"node\",\n      \"request\": \"attach\",\n      \"name\": \"Attach to Node\",\n      \"address\": \"localhost\",\n      \"port\": 9229\n    }\n  ]\n}\n</code></pre>"},{"location":"Projecte%20Biblioteca/Pildores/Node/npm_init/#resum","title":"Resum:","text":"<ol> <li><code>npm init</code>: Crea el teu projecte i genera el fitxer <code>package.json</code>.</li> <li> <p>Instal\u00b7lar Nodemon:</p> </li> <li> <p>Globalment: <code>npm install -g nodemon</code></p> </li> <li>Localment: <code>npm install --save-dev nodemon</code></li> <li> <p>Llan\u00e7ar en depuraci\u00f3:</p> </li> <li> <p>Modifica <code>package.json</code> per utilitzar <code>node --inspect-brk</code> o <code>nodemon --inspect-brk</code>.</p> </li> <li>Executa <code>npm test</code> per llan\u00e7ar el projecte en mode de depuraci\u00f3.</li> </ol> <p>Amb aix\u00f2, tens tot configurat per treballar en mode de depuraci\u00f3 amb Node.js i Nodemon!</p>"},{"location":"Projecte%20Biblioteca/Tasques/BDD/","title":"BDD","text":""},{"location":"Projecte%20Biblioteca/Tasques/BDD/#persistencia-de-dades","title":"Persist\u00e8ncia de dades:","text":"<p>Es vol garantir la persist\u00e8ncia de les dades utilitzant MySQL com a base de dades, la qual ha de ser executada en un contenidor Docker. El sistema ha de mantenir les dades de forma persistent, fins i tot si el contenidor es reinicia o es recrea.</p>"},{"location":"Projecte%20Biblioteca/Tasques/BDD/#preguntes-a-plantejar-nos","title":"Preguntes a plantejar-nos","text":"<ul> <li>Observes algun problema al disseny de la base de dades seg\u00fcent?</li> </ul> SQL<pre><code>-- Creaci\u00f3 de la base de dades\nCREATE DATABASE Biblioteca;\nUSE Biblioteca;\n\n-- Creaci\u00f3 de la taula Recursos\nCREATE TABLE Recursos (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    titol VARCHAR(255),\n    exemplars_disponibles INT,\n    tipus ENUM('llibre', 'revista', 'pel\u00b7l\u00edcula')\n);\n\n-- Creaci\u00f3 de la taula Llibres\nCREATE TABLE Llibres (\n    id INT PRIMARY KEY,\n    autor VARCHAR(255),\n    FOREIGN KEY (id) REFERENCES Recursos(id)\n);\n\n-- Creaci\u00f3 de la taula Revistes\nCREATE TABLE Revistes (\n    id INT PRIMARY KEY,\n    data_publicacio DATE,\n    FOREIGN KEY (id) REFERENCES Recursos(id)\n);\n\n-- Creaci\u00f3 de la taula Pel\u00b7l\u00edcules\nCREATE TABLE Pelicules (\n    id INT PRIMARY KEY,\n    director VARCHAR(255),\n    genere VARCHAR(100),\n    FOREIGN KEY (id) REFERENCES Recursos(id)\n);\n\n-- Creaci\u00f3 de la taula Socis\nCREATE TABLE Socis (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    nom VARCHAR(255),\n    dni VARCHAR(20) UNIQUE,\n    llibres_prestats TEXT\n);\n\n-- Creaci\u00f3 de la taula Administradors\nCREATE TABLE Administradors (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    nom VARCHAR(255),\n    dni VARCHAR(20) UNIQUE,\n    carrec VARCHAR(50)\n);\n\n-- Creaci\u00f3 de la taula Pr\u00e9stecs\nCREATE TABLE Prestecs (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    soci_id INT,\n    recurso_id INT,\n    data_prestec DATE,\n    data_retorn DATE,\n    FOREIGN KEY (soci_id) REFERENCES Socis(id),\n    FOREIGN KEY (recurso_id) REFERENCES Recursos(id)\n);\n\n-- Inserci\u00f3 de dades de mostra a la taula Recursos\nINSERT INTO Recursos (titol, exemplars_disponibles, tipus)\nVALUES\n    ('El gran llibre', 5, 'llibre'),\n    ('Revista de Ci\u00e8ncia', 10, 'revista'),\n    ('La gran pel\u00b7l\u00edcula', 3, 'pel\u00b7l\u00edcula');\n\n-- Inserci\u00f3 de dades a la taula Llibres\nINSERT INTO Llibres (id, autor)\nVALUES\n    (1, 'Joan P\u00e9rez');\n\n-- Inserci\u00f3 de dades a la taula Revistes\nINSERT INTO Revistes (id, data_publicaci\u00f3)\nVALUES\n    (2, '2023-09-01');\n\n-- Inserci\u00f3 de dades a la taula Pel\u00b7l\u00edcules\nINSERT INTO Pelicules (id, director, g\u00e8nere)\nVALUES\n    (3, 'Luis Garc\u00eda', 'Acci\u00f3');\n\n-- Inserci\u00f3 de dades a la taula Socis\nINSERT INTO Socis (nom, dni, llibres_prestats)\nVALUES\n    ('Anna Mart\u00ednez', '12345678A', '1'),\n    ('Pere G\u00f3mez', '23456789B', '2');\n\n-- Inserci\u00f3 de dades a la taula Administradors\nINSERT INTO Administradors (nom, dni, c\u00e0rrec)\nVALUES\n    ('Carles Fern\u00e1ndez', '34567890C', 'administrador'),\n    ('Marta S\u00e1nchez', '45678901D', 'ajudant');\n\n-- Inserci\u00f3 de dades a la taula Pr\u00e9stecs\nINSERT INTO Pr\u00e9stecs (soci_id, recurso_id, data_prestec, data_retorn)\nVALUES\n    (1, 1, '2025-09-23', '2025-09-30'),\n    (2, 2, '2025-09-22', '2025-09-29');\n</code></pre> <ul> <li>Com corregim els anteriors problemes?</li> <li>Qu\u00e8 passa amb la informaci\u00f3 del contenidor en apagar-lo?</li> <li>Com fem la informaci\u00f3 del contenidor persistent?</li> <li>Com comprovem que ho \u00e9s?</li> <li>Puc reutilitzar la informaci\u00f3 en un altre contenidor?</li> <li>Has tingut algun problema en executar l'script d'sql al contenidor?</li> <li>Com fem que en al\u00e7ar el contenidor es cree la base de dades?</li> <li>Com protegim la contrasenya d'acc\u00e9s a MySQL?</li> <li>Com comprovem que la informaci\u00f3 inicial de la base de dades s'ha creat correctament?</li> </ul>"},{"location":"Projecte%20Biblioteca/Tasques/ExerciciPOO/","title":"ExerciciPOO","text":""},{"location":"Projecte%20Biblioteca/Tasques/ExerciciPOO/#exercici-gestio-duna-biblioteca","title":"Exercici: Gesti\u00f3 d'una Biblioteca","text":"<p>Crea una aplicaci\u00f3 de l\u00ednia de comandes de gesti\u00f3 de biblioteca amb Javascript que utilitze els conceptes de POO. La biblioteca ha de ser capa\u00e7 de gestionar material (llibres, revistes i pel\u00b7l\u00edcules), socis i administradors de pr\u00e9stecs.</p> <p>Cada llibre ha de tindre:</p> <ul> <li>un t\u00edtol</li> <li>un autor</li> <li>un n\u00famero d'exemplars disponibles</li> </ul> <p>Cada revista ha de tindre:</p> <ul> <li>un t\u00edtol</li> <li>un data de publicaci\u00f3</li> <li>un n\u00famero d'exemplars disponibles</li> </ul> <p>Cada pel\u00b7l\u00edcula ha de tindre:</p> <ul> <li>un t\u00edtol</li> <li>un director</li> <li>un g\u00e8nere</li> <li>un n\u00famero d'exemplars disponibles</li> </ul> <p>Cada soci ha de tindre:</p> <ul> <li>un nom</li> <li>un DNI</li> <li>una llista de llibres prestats.</li> </ul> <p>Cada administrador de pr\u00e9stecs ha de tindre:</p> <ul> <li>un nom</li> <li>un DNI</li> <li>un c\u00e0rrec (administrador o ajudant)</li> </ul> <p>L'aplicaci\u00f3 ha de permetre les seg\u00fcents funcions:</p> <ul> <li>Afegir un llibre a la biblioteca amb la informaci\u00f3 del t\u00edtol, autor i nombre d'exemplars disponibles.</li> <li>Afegir una pel\u00b7l\u00edcula a la biblioteca amb la informaci\u00f3 del t\u00edtol, director, g\u00e8nere i nombre d'exemplars disponibles.</li> <li>AAfegir una revista a la biblioteca amb la informaci\u00f3 del t\u00edtol, la data de publicaci\u00f3 i nombre d'exemplars disponibles.</li> <li>Afegir un soci amb el seu nom i DNI.</li> <li>Afegir un administrador amb el seu nom, DNI i c\u00e0rrec.</li> <li>Prestar un recurs a un soci. Cal verificar que el recurs estiga disponible i que el soci no haja superat el l\u00edmit de llibres prestats (per exemple, un m\u00e0xim de 3 llibres per soci).</li> <li>Retornar un llibre.</li> <li>Mostrar una llista de tots els recursos, amb la possibilitat de filtrar per tipus. En el cas de pel\u00b7l\u00edcules s'haur\u00e0 de filtrar tamb\u00e9 per g\u00e8nere. En el cas de revista per any de publicaci\u00f3.</li> <li>Mostrar una llista de tots els socis.</li> <li>Mostrar una llista de tots els administradors de pr\u00e9stecs.</li> <li>Mostrar una llista amb la informaci\u00f3 sobre quins recursos estan prestats a cada soci.</li> </ul> <p>Definix una classe per a cada objecte i utilitzar correctament els conceptes de programaci\u00f3 orientada a objectes com l'her\u00e8ncia, encapsulaci\u00f3 i m\u00e8todes per gestionar les operacions anteriorment mencionades.</p> <p>Crea tamb\u00e9 una classe principal o un programa de prova per interactuar amb la biblioteca.</p> <p>Aquest exercici t'ajudar\u00e0 a practicar els conceptes de programaci\u00f3 orientada a objectes, com la creaci\u00f3 de classes, la gesti\u00f3 d'objectes i la interacci\u00f3 entre ells.</p> <p>Descarrega ac\u00ed la SOLUCI\u00d3.</p>"},{"location":"info/guia_alumne_DI/","title":"guia alumne DI","text":""},{"location":"info/guia_alumne_DI/#1-presentacio-del-modul","title":"1. Presentaci\u00f3 del m\u00f2dul","text":"<p>El m\u00f2dul de Desenvolupament d'Interf\u00edcies pertany al 2on curs del CFGS de Desenvolupament d'Aplicacions Multiplataforma, i contribueix a aquirir diverses de les unitats de compet\u00e8ncia que s'hi estableixen al Cat\u00e0leg Nacional de Qualificacions Professionals.</p> <p>Segons el RD del t\u00edtol, la formaci\u00f3 en aquest m\u00f2dul contribueix a assolir els seg\u00fcents objectius del m\u00f2dul:</p> <ul> <li> <p>e) Seleccionar i emprar llenguatges, eines i llibreries, interpretant-ne les especificacions per desenvolupar aplicacions multiplataforma amb acc\u00e9s a bases de dades.</p> </li> <li> <p>f) Gestionar la informaci\u00f3 emmagatzemada, planificant i implementant sistemes de formularis i informes per desenvolupar aplicacions de gesti\u00f3.  </p> </li> <li> <p>g) Seleccionar i utilitzar eines espec\u00edfiques, llenguatges i llibreries, avaluant les possibilitats i seguint un manual d'estil, per manipular i integrar en aplicacions multiplataforma continguts gr\u00e0fics i components multim\u00e8dia.  </p> </li> <li> <p>h) Emprar eines de desenvolupament, llenguatges i components visuals, seguint les especificacions i verificant interactivitat i usabilitat, per desenvolupar interf\u00edcies gr\u00e0fics dusuari en aplicacions multiplataforma.  </p> </li> <li> <p>k) Valorar i emprar eines espec\u00edfiques, atenent l'estructura dels continguts, per crear ajudes generals i sensibles al context.</p> </li> <li> <p>l) Valorar i emprar eines espec\u00edfiques, atenent l'estructura dels continguts, per crear tutorials, manuals d'usuari i altres documents associats a una aplicaci\u00f3.  </p> </li> <li> <p>m) Seleccionar i emprar t\u00e8cniques i eines, avaluant la utilitat dels assistents d'instal\u00b7laci\u00f3 generats, per empaquetar aplicacions.  </p> </li> <li> <p>r) Verificar els components programari desenvolupats, analitzant les especificacions, per completar un pla de proves.  </p> </li> <li> <p>s) Establir procediments, verificant-ne la funcionalitat, per desplegar i distribuir aplicacions.  </p> </li> <li> <p>w) Identificar els canvis tecnol\u00f2gics, organitzatius, econ\u00f2mics i laborals en el seu activitat, analitzant-ne les implicacions en l'\u00e0mbit de treball, per mantenir l'esperit innovaci\u00f3.  </p> </li> </ul>"},{"location":"info/guia_alumne_DI/#2-objectius-resultats-daprenentatge","title":"2. Objectius. Resultats d'aprenentatge","text":"<p>D'acord amb la normativa, els resultats d'aprenentatge del m\u00f2dul de Desenvolupament d'Interf\u00edcies s\u00f3n:</p> <ol> <li>Genera interf\u00edcies gr\u00e0fiques d'usuari mitjan\u00e7ant editors visuals utilitzant les funcionalitats de l'editor i adaptant el codi generat.  </li> <li>Genera interf\u00edcies gr\u00e0fiques d'usuari basades en XML utilitzant eines espec\u00edfiques i adaptant el document XML generat.  </li> <li>Crea components visuals valorant i emprant eines espec\u00edfiques.  </li> <li>Dissenya interf\u00edcies gr\u00e0fiques identificant i aplicant criteris d'usabilitat.</li> <li>Crea informes avaluant i utilitzant eines gr\u00e0fiques.  </li> <li>Documenta aplicacions seleccionant i utilitzant eines espec\u00edfiques.  </li> <li>Prepara aplicacions per a la seva distribuci\u00f3 avaluant i utilitzant eines espec\u00edfiques.  </li> <li>Avalua el funcionament d'aplicacions dissenyant i executant proves.  </li> </ol>"},{"location":"info/guia_alumne_DI/#3-continguts-del-modul-unitats-didactiques","title":"3. Continguts del m\u00f2dul. Unitats did\u00e0ctiques","text":"<p>Els continguts del m\u00f2dul s'organitzen de la seguent forma:</p> <ul> <li>UD 1. Programaci\u00f3 amb Python. </li> <li>UD 2. Introducci\u00f3 a les interf\u00edcies gr\u00e0fiques.</li> <li>UD 3. Generaci\u00f3 d\u2019interf\u00edcies amb Flet</li> <li>UD 4. Generaci\u00f3 d\u2019interf\u00edcies amb PySide6</li> <li>UD 5. Generaci\u00f3 d\u2019interf\u00edcies mitjan\u00e7ant llenguatges de marques.</li> <li>UD 6. Elaboraci\u00f3 d\u2019informes.</li> <li>UD 7. Documentaci\u00f3 d'aplicaciones.</li> <li>UD 8. Proves, distribuci\u00f3 e implantaci\u00f3 d'aplicacions.</li> </ul>"},{"location":"info/guia_alumne_DI/#4-temporalitzacio-de-continguts","title":"4. Temporalitzaci\u00f3 de continguts","text":"<p>La temporalitzaci\u00f3 de continguts prevista ser\u00e0 la seg\u00fcemt:</p> Trimestre 1 Trimestre 2 Unitats 1-3 Unitats 4-7 <p></p>"},{"location":"info/guia_alumne_DI/#5-aspectes-metodologics","title":"5. Aspectes metodol\u00f2gics","text":""},{"location":"info/guia_alumne_DI/#51-material-didactic","title":"5.1. Material Did\u00e0ctic","text":"<p>El material did\u00e0ctic del m\u00f2dul pot ressumir-se en el seg\u00fcent:</p> <ul> <li>Apunts proporcionats pel professor en format web on s'inclouran exemples resolts del que s'ha d'estudiar.</li> <li>Textos d'ampliaci\u00f3 i enlla\u00e7os a articles i documentaci\u00f3 oficial relacionats amb cada unitat.</li> <li>Pr\u00e0ctiques i exercicis per resoldre per refor\u00e7ar el que s'ha exposat als apunts.</li> </ul> <p>Tot aquest material s'oferir\u00e0 a trav\u00e9s de la web i a trav\u00e9s l'aula virtual durant el desenvolupament de cada unitat.</p> <p>A m\u00e9s, dins l'aula virtual, disposarem d'un f\u00f2rum general per comentar aspectes globals del m\u00f2dul, i un f\u00f2rum per cada unitat did\u00e0ctica, per tal de resoldre dubtes i tractar aspectes relacionats amb la unitat.</p>"},{"location":"info/guia_alumne_DI/#52-programari","title":"5.2. Programari","text":"<p>El programari a utilitzar ser\u00e0 principalment lliure, i es donaran instruccions en cada unitat per a la seua desc\u00e0rrega i instal\u00b7laci\u00f3. A grans trets, el programari a utilitzar ser\u00e0:</p> <ul> <li>Sistema operatiu d'elecci\u00f3 pr\u00f2pia. Com a sistema operatiu de base a l'aula fem servir Linux Mint, tot i que per al modul, per\u00f2 l'alumne pot utilitzar qualsevol altre sistema operatiu, ja que tot el programari amb qu\u00e8 treballarem \u00e9s multiplataforma.</li> <li>Visual Studio Code com a editor de codi, que suporta diferents llenguatges, i \u00e9s bastant ampliable amb extensions. Tot i que ser\u00e0 l'editor de refer\u00e8ncia, es pot fer \u00fas de PyCharm, Eclipse, InteliJ o qualsevol altre editor/IDE.</li> <li>Python3, com a llenguatge de programaci\u00f3,</li> <li>PySide6 (Qt + Python3) com a framework per a aplicacions amb interf\u00edcie d'usuari multiplataforma per a aplicacions d'escriptori.</li> <li>Flet (Flutter + Python3), com a framework per a aplicacions multiplataforma amb interf\u00edcie d'usuari per a m\u00f2bil, web o escriptori.</li> <li>Llibreries python, altres llibreries de Python3 per a generar documentaci\u00f3, informes, proves o construcci\u00f3 dels binaris.</li> </ul>"},{"location":"info/guia_alumne_DI/#53-eines-web-i-collaboratives","title":"5.3. Eines web i col\u00b7laboratives","text":"<p>A banda del programari esmentat anteriorment, tamb\u00e9 s'utilitzaran el seg\u00fcent portals web i plataformes de treball col\u00b7laboratiu:</p> <ul> <li>Portal Aules: Com a aula virtual, i que articular\u00e0 el funcionament del m\u00f2dul. Ser\u00e0 aci on s'ubiquen els diferents recursos, f\u00f2rums, etc.</li> <li>Github: En alguns projectes en grup, ser\u00e0 de gran ajuda treballar amb sistemes de control de versions distribuits, com Github o Gitlab, de manera que puguen realitzar desenvolupaments de forma col\u00b7laborativa. Podeu optar per fer l'entrega de treballs a trav\u00e9s del vostre repositori Github.</li> </ul>"},{"location":"info/guia_alumne_DI/#54-metodologia","title":"5.4. Metodologia","text":"<p>Per a aquest curs, tant en modalitat presencial com semipresencial, anem a buscar una forma el m\u00e9s pr\u00e0ctica possible d'abordar les classes. </p> <p>Segons aquestes premisses, la metodolog\u00eda utilitzada al m\u00f2dul es regir\u00e0 per les seg\u00fcents pautes:</p> <ul> <li>En iniciar cada unitat did\u00e0tica es realitzar\u00e0 una presentaci\u00f3 inicial d'aquesta, dels conceptes b\u00e0sics, i de qu\u00e8 sereu capa\u00e7os de fer en finalitzar-la.</li> <li>Disposareu de material per a la seua lectura comprensiva i estudi, aix\u00ed com de documentaci\u00f3 addicional que es considere interessant,</li> <li>Disposareu d'exercicis i pr\u00e0ctiques que acompanyen la teor\u00eda de la unitat i que ens ajudaran a entendre els conceptes de la unitat, fonamentant-se en coneixements previs, facilitant aix\u00ed l'aprenentatge per descobriment, significatiu i deductiu.</li> <li>Les session a l'aula tindran un car\u00e0cter fonamentalment pr\u00e0ctic, i s'aprofitaran exemples i casos pr\u00e0ctics per exposar els principals conceptes.</li> <li>Es fomentar\u00e0 la realitzaci\u00f3 de projectes i treballs en equip, simulant el treball real en una empresa, on cadasc\u00fa tindr\u00e0 un paper ben definit dins el grup. (sols per a presencial, en el cas de semipresencial, el treball ser\u00e0 individual).</li> </ul>"},{"location":"info/guia_alumne_DI/#6-avaluacio","title":"6. Avaluaci\u00f3","text":"<p>L'avaluaci\u00f3 ser\u00e0 continuada, i consistir\u00e0 en el seguiment del treball que aneu realitzant. Cada unitat tindr\u00e0 una qualificaci\u00f3, fruit del treball d'activitats i pr\u00e0ctiques entregables.</p> <p>En finalitzar cada avaluaci\u00f3 podr\u00e0 haver una prova de validaci\u00f3 de coneixements, que caldr\u00e0 aprovar per considerar v\u00e0lida la qualificaci\u00f3 de l'avaluaci\u00f3 contunuada. La nota final ser\u00e0 la nota ponderada de la qualificaci\u00f3 del les diferents unitats, en funci\u00f3 del temps invertit en cadascuna, i el pes considerat per a cada tasca. Es perd el dret a l'avaluaci\u00f3 continuada en faltar a m\u00e9s d'un 15% de les classes. En este cas, la nota vindr\u00e0 donada al 100% per la nota de la prova corresponent.</p> <p>En cas de no superar l'avaluaci\u00f3, es tindr\u00e0 dret a una convocat\u00f2ria en per\u00edode extraordinari.</p> <p>Per a la correcci\u00f3 de les pr\u00e0ctiques i projectes s'utilitzar\u00e0 la r\u00fabrica disponible a la documentaci\u00f3.</p>"},{"location":"info/qualificacio/rubrica/","title":"Rubrica","text":""},{"location":"info/qualificacio/rubrica/#1-rubrica-per-a-avaluar-practiquesprojectes-en-disseny-dinterficies","title":"1. R\u00fabrica per a avaluar pr\u00e0ctiques/projectes, en Disseny D'interf\u00edcies","text":"<p>Criteris a evaluar:</p> <ul> <li>Resoluci\u00f3: utilitzaci\u00f3 dels algoritmes, les estructures de dades, les funcions, les estructures de control .. m\u00e9s adequats.</li> <li>Funcionament: la soluci\u00f3 proposada fa el que s'ha demanat.</li> <li>Interf\u00edcie:: interf\u00edcie clara i estructurada d'acord amb les especificacions.</li> <li>Altres aspectes: noms de variables, comentaris, regles d'estil de python, llibreries, documentaci\u00f3 per a posar en funcionament...</li> </ul> Molt b\u00e9 B\u00e9 Deficient Molt deficient Resoluci\u00f3 Utilitza les estructures m\u00e9s adequats per a resoldre l'exercici. Utilitza les estructures necessaris per a resoldre l'exercici, encara que no s\u00f3n les m\u00e9s adequades. Utilitza estructures inadequades per a resoldre l'exercici. Utilitza estructures que no resolen l'exercici. Puntuaci\u00f3 (m\u00e0x. 3) 3 2 1 0 Funcionament El funcionament de l'exercici \u00e9s correcte i est\u00e0 complet. El funcionament de l\u2019exercici est\u00e0 quasi complet o est\u00e0 complet per\u00f2 t\u00e9 fallades sense import\u00e0ncia. El funcionament de l'exercici t\u00e9 fallades importants. L'exercici no funciona. Puntuaci\u00f3 (m\u00e0x. 3) 3 2 1 0 Interf\u00edcie La interf\u00edcie utilitza els components m\u00e9s adequats, \u00e9s clar i estructurat, i a m\u00e9s \u00e9s amigable. La interf\u00edcie cont\u00e9 alguns components que no s\u00f3n els m\u00e9s adequats, per\u00f2 \u00e9s clar i estructurat. La interf\u00edcie cont\u00e9 alguns components que no s\u00f3n els m\u00e9s adequats, i a m\u00e9s, no \u00e9s clar ni estructurat. Al disseny gr\u00e0fic li falten alguns components necessaris i utilitza components que no s\u00f3n correctes. Puntuaci\u00f3 (m\u00e0x. 3) 3 2 1 0 Altres aspectes Puntuaci\u00f3 (m\u00e0x. 3) 3 2 1 0"}]}